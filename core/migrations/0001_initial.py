# Generated by Django 4.0.4 on 2022-05-03 09:22

import ckeditor.fields
import core.models
from django.db import migrations, models
import django.db.models.deletion
import jsoneditor.fields.django3_jsonfield


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ImageCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=70)),
                ('image', models.ImageField(upload_to=core.models.upload_dir)),
                ('image_type', models.CharField(choices=[('N', 'News'), ('S', 'PcSpecs'), ('P', 'Profile'), ('C', 'Category')], max_length=1)),
                ('caption', models.CharField(blank=True, max_length=100)),
                ('alt', models.CharField(max_length=70)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='JsonData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25)),
                ('data_type', models.CharField(choices=[('I', 'Wiki Info'), ('S', 'Player Settings')], default='S', max_length=1)),
                ('data', jsoneditor.fields.django3_jsonfield.JSONField(blank=True)),
            ],
            options={
                'verbose_name': 'JSON Data',
                'verbose_name_plural': 'JSON Data',
            },
        ),
        migrations.CreateModel(
            name='PcSpecs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('slug', models.SlugField(blank=True, max_length=80)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_title', models.CharField(blank=True, max_length=70)),
                ('meta_description', ckeditor.fields.RichTextField(blank=True)),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('index_page', models.BooleanField(default=True)),
                ('publish', models.BooleanField(default=False)),
                ('section', models.CharField(choices=[('O', 'Others'), ('GG', 'Gaming Gear'), ('GPS', 'Gaming PC Setup'), ('SPS', 'Streaming PC Setup')], default='O', help_text='GG: Monitor, Mouse, Mousepad, Keyboard, Headset\n        |===| GPS: CPU, GPU, MB, RAM, Case, HDD, SSD, PowerSupply, LCOOL, Fans\n        |===| SPS: Second Mon, ARM, Mic, CAM, WebCam, Chair, Ctrl Panel, AMP,\n        Studio Lit, Light Kit, USB', max_length=3)),
                ('specs_type', models.CharField(choices=[('mon', 'Monitor'), ('ms', 'Mouse'), ('msp', 'Mousepad'), ('key', 'Keyboard'), ('hs', 'Headset'), ('cpu', 'CPU'), ('gpu', 'GPU'), ('mb', 'Motherboard'), ('ram', 'RAM'), ('case', 'Case/Tower'), ('hdd', 'HDD'), ('ssd', 'SSD'), ('ps', 'Power Supply'), ('mic', 'Microphone'), ('cam', 'Camera'), ('wcam', 'Webcam'), ('ch', 'Chair'), ('lc', 'Liquid Cooling'), ('fn', 'Fans'), ('arm', 'ARM'), ('sl', 'Studio Light'), ('con', 'Controller'), ('o', 'Other')], default='o', max_length=10)),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('amazon_url', models.URLField()),
                ('reviews', ckeditor.fields.RichTextField(blank=True)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', to='core.imagecollection')),
            ],
            options={
                'verbose_name': 'PC Specs',
                'verbose_name_plural': 'PC Specs',
            },
        ),
        migrations.CreateModel(
            name='SEOImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('hd_image', models.ImageField(blank=True, upload_to='hd/')),
                ('sd_image', models.ImageField(blank=True, upload_to='sd/')),
            ],
            options={
                'verbose_name': 'SEO Image',
                'verbose_name_plural': 'SEO Images',
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('slug', models.SlugField(blank=True, max_length=80)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_title', models.CharField(blank=True, max_length=70)),
                ('meta_description', ckeditor.fields.RichTextField(blank=True)),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('index_page', models.BooleanField(default=True)),
                ('publish', models.BooleanField(default=False)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', to='core.imagecollection')),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
            },
        ),
        migrations.CreateModel(
            name='WikiCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('slug', models.SlugField(blank=True, max_length=80)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_title', models.CharField(blank=True, max_length=70)),
                ('meta_description', ckeditor.fields.RichTextField(blank=True)),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('index_page', models.BooleanField(default=True)),
                ('publish', models.BooleanField(default=False)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', to='core.imagecollection')),
            ],
            options={
                'verbose_name': 'Wiki Category',
                'verbose_name_plural': 'Wiki Categories',
            },
        ),
        migrations.CreateModel(
            name='Wiki',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('slug', models.SlugField(blank=True, max_length=80)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_title', models.CharField(blank=True, max_length=70)),
                ('meta_description', ckeditor.fields.RichTextField(blank=True)),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('index_page', models.BooleanField(default=True)),
                ('publish', models.BooleanField(default=False)),
                ('overview', ckeditor.fields.RichTextField(blank=True)),
                ('body', ckeditor.fields.RichTextField(blank=True)),
                ('ref', ckeditor.fields.RichTextField(blank=True)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', to='core.imagecollection')),
                ('info_box', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wiki_info', to='core.jsondata')),
                ('meta_images', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seo_images_wiki', to='core.seoimage')),
                ('page_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wiki_topic', to='core.topic')),
                ('tags', models.ManyToManyField(blank=True, related_name='wiki_tags', to='core.wikicategory')),
            ],
            options={
                'verbose_name': 'Wiki',
                'verbose_name_plural': 'Wikis',
            },
        ),
        migrations.CreateModel(
            name='SetupSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('slug', models.SlugField(blank=True, max_length=80)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_title', models.CharField(blank=True, max_length=70)),
                ('meta_description', ckeditor.fields.RichTextField(blank=True)),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('index_page', models.BooleanField(default=True)),
                ('publish', models.BooleanField(default=False)),
                ('is_pro', models.BooleanField(default=True)),
                ('overview', ckeditor.fields.RichTextField(blank=True)),
                ('settings_body', ckeditor.fields.RichTextField(blank=True)),
                ('setup_body', ckeditor.fields.RichTextField(blank=True)),
                ('ref', ckeditor.fields.RichTextField(blank=True)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', to='core.imagecollection')),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_game', to='core.wiki')),
                ('meta_images', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seo_images_setup', to='core.seoimage')),
                ('related', models.ManyToManyField(blank=True, to='core.setupsettings')),
                ('settings', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='player_settings', to='core.jsondata')),
                ('specs', models.ManyToManyField(blank=True, related_name='person_specs', to='core.pcspecs')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_team', to='core.wiki')),
            ],
            options={
                'verbose_name': 'Setup and Settings',
                'verbose_name_plural': 'Setup and Settings',
            },
        ),
        migrations.CreateModel(
            name='NewsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('slug', models.SlugField(blank=True, max_length=80)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_title', models.CharField(blank=True, max_length=70)),
                ('meta_description', ckeditor.fields.RichTextField(blank=True)),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('index_page', models.BooleanField(default=True)),
                ('publish', models.BooleanField(default=False)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', to='core.imagecollection')),
                ('intro_body', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.wiki')),
            ],
            options={
                'verbose_name': 'News Category',
                'verbose_name_plural': 'News Categories',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('slug', models.SlugField(blank=True, max_length=80)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_title', models.CharField(blank=True, max_length=70)),
                ('meta_description', ckeditor.fields.RichTextField(blank=True)),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('index_page', models.BooleanField(default=True)),
                ('publish', models.BooleanField(default=False)),
                ('overview', ckeditor.fields.RichTextField(blank=True)),
                ('body', ckeditor.fields.RichTextField(blank=True)),
                ('ref', ckeditor.fields.RichTextField(blank=True)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', to='core.imagecollection')),
                ('tags', models.ManyToManyField(related_name='news_tags', to='core.newscategory')),
            ],
            options={
                'verbose_name': 'News',
                'verbose_name_plural': 'News',
            },
        ),
    ]
